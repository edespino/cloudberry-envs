# .envrc

# Get the current directory name and extract the suffix for env naming
CURRENT_DIR=${PWD##*/}
export TF_VAR_platform=$(echo $CURRENT_DIR | awk -F '-' '{print $NF}')
## export TF_VAR_env_prefix=$(whoami)-$(echo $CURRENT_DIR | awk -F '-' '{print $NF}')
export TF_VAR_env_prefix=build-$(echo $CURRENT_DIR | awk -F '-' '{print $NF}')
export TF_VAR_terraform_project_dir_name=$CURRENT_DIR

# Public IP address of the local machine
export TF_VAR_my_ip=$(curl -s https://api.ipify.org)

# AWS region to use
export TF_VAR_region="us-east-1"

# Instance type for the EC2 instance
## export TF_VAR_instance_type="t3.2xlarge"
export TF_VAR_instance_type="m7i.4xlarge"
## export TF_VAR_instance_type="t2.micro"

# Number of VMs to create
export TF_VAR_vm_count=5

export TF_VAR_default_username=rocky

# Parameterized variables for AMI owner and filter
## AMI_OWNER="792107900819"
## AMI_FILTER='Rocky-8-EC2-Base*x86_64'

## AMI_OWNER="024848478044"
## AMI_FILTER='packer-build-rocky8-*'

AMI_OWNER="024848478044"
AMI_FILTER='packer-test-rocky8-*'

# Fetch the latest AMI ID dynamically
latest_ami=$(aws ec2 describe-images --region $TF_VAR_region --owners $AMI_OWNER --filters "Name=name,Values=$AMI_FILTER" --query 'Images | sort_by(@, &CreationDate) | [-1].ImageId' --output text)

# Check if an AMI ID was retrieved
if [ "$latest_ami" = 'None' ]; then
  echo "Error: No AMI found matching the specified criteria (Owner: $AMI_OWNER; Filter: $AMI_FILTER) in region $TF_VAR_region"
  echo "  Owner ... : $AMI_OWNER"
  echo "  Filter .. : $AMI_FILTER"
  echo "  Region .. : $TF_VAR_region"
  exit 1
else
  ami_name=$(aws ec2 describe-images --region $TF_VAR_region --owners $AMI_OWNER --filters "Name=name,Values=$AMI_FILTER" --query 'sort_by(Images, &CreationDate)[-1].Tags[?Key==`Name`].Value | [0]' --output text)
  ami_description=$(aws ec2 describe-images --region $TF_VAR_region --owners $AMI_OWNER --filters "Name=name,Values=$AMI_FILTER" --query 'Images | sort_by(@, &CreationDate) | [-1].Description' --output text)
  export TF_VAR_ami=$latest_ami
  echo ""
  echo "======================================================================"
  echo "AMI Name ......... : ${ami_name}"
  echo "AMI Description .. : ${ami_description}"
  echo "AMI ID ........... : $TF_VAR_ami"
  echo "======================================================================"
  echo ""
fi
